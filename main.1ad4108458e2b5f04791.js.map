{"version":3,"sources":["webpack:///./index.js","webpack:///./plugin.js"],"names":["selector","targetDate","this","refs","daysElem","document","querySelector","hoursElem","minsElem","secsElem","run","changeDate","time","getTime","Date","calculateTime","viewError","days","Math","floor","hours","mins","secs","changeElems","innerHTML","setInterval"],"mappings":"mIAGA,ICHA,WACE,cAAsC,IAAxBA,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACtBC,KAAKF,SAAWA,EAChBE,KAAKD,WAAaA,EAElBC,KAAKC,KAAO,CACVC,SAAUC,SAASC,cACdJ,KAAKF,SADA,4BAGVO,UAAWF,SAASC,cACfJ,KAAKF,SADC,6BAGXQ,SAAUH,SAASC,cACdJ,KAAKF,SADA,4BAGVS,SAAUJ,SAASC,cACdJ,KAAKF,SADA,6BAKZE,KAAKQ,MApBT,2BAsBEC,WAAA,WACE,IAAMC,EAAOV,KAAKD,WAAWY,WAAY,IAAIC,MAAOD,UACpDD,EAAO,EAAIV,KAAKa,cAAcH,GAAQV,KAAKc,aAxB/C,EA0BED,cAAA,SAAcH,GACZ,IAAMK,EAAOC,KAAKC,MAAMP,EAAO,OACzBQ,EAAQF,KAAKC,MAAOP,EAAO,MAAR,MACnBS,EAAOH,KAAKC,MAAOP,EAAO,KAAR,KAClBU,EAAOJ,KAAKC,MAAOP,EAAO,IAAe,KAC/CV,KAAKqB,YAAYN,EAAMG,EAAOC,EAAMC,IA/BxC,EAiCEC,YAAA,SAAYN,EAAMG,EAAOC,EAAMC,GAC7BpB,KAAKC,KAAKC,SAASoB,UAAYP,EAC/Bf,KAAKC,KAAKI,UAAUiB,UAAYJ,EAChClB,KAAKC,KAAKK,SAASgB,UAAYH,EAC/BnB,KAAKC,KAAKM,SAASe,UAAYF,GArCnC,EAuCEZ,IAAA,WAAM,WACJR,KAAKS,aACLc,aAAY,WACV,EAAKd,eACJ,MA3CP,EA6CEK,UAAA,WACEX,SAASC,cAAcJ,KAAKF,UAAUwB,UAAY,iBA9CtD,KDGA,CAAmB,CACjBxB,SAAU,WACVC,WAAY,IAAIa,KAAK,oB","file":"main.1ad4108458e2b5f04791.js","sourcesContent":["import './styles.css';\nimport { CountdownTimer } from './plugin';\n\nnew CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jun 19, 2020'),\n});\n","export class CountdownTimer {\r\n  constructor({ selector, targetDate }) {\r\n    this.selector = selector;\r\n    this.targetDate = targetDate;\r\n\r\n    this.refs = {\r\n      daysElem: document.querySelector(\r\n        `${this.selector} span[data-value=\"days\"]`,\r\n      ),\r\n      hoursElem: document.querySelector(\r\n        `${this.selector} span[data-value=\"hours\"]`,\r\n      ),\r\n      minsElem: document.querySelector(\r\n        `${this.selector} span[data-value=\"mins\"]`,\r\n      ),\r\n      secsElem: document.querySelector(\r\n        `${this.selector} span[data-value=\"secs\"]`,\r\n      ),\r\n    };\r\n\r\n    this.run();\r\n  }\r\n  changeDate() {\r\n    const time = this.targetDate.getTime() - new Date().getTime();\r\n    time > 0 ? this.calculateTime(time) : this.viewError();\r\n  }\r\n  calculateTime(time) {\r\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n    const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n    this.changeElems(days, hours, mins, secs);\r\n  }\r\n  changeElems(days, hours, mins, secs) {\r\n    this.refs.daysElem.innerHTML = days;\r\n    this.refs.hoursElem.innerHTML = hours;\r\n    this.refs.minsElem.innerHTML = mins;\r\n    this.refs.secsElem.innerHTML = secs;\r\n  }\r\n  run() {\r\n    this.changeDate();\r\n    setInterval(() => {\r\n      this.changeDate();\r\n    }, 1000);\r\n  }\r\n  viewError() {\r\n    document.querySelector(this.selector).innerHTML = 'Timer is over';\r\n  }\r\n}\r\n"],"sourceRoot":""}